:seti -XOverloadedStrings -XViewPatterns -XTupleSections -XLambdaCase

:{
prompt_ :: [String] -> Int -> Int -> Int -> String
prompt_ mods line color colorDelim =
    putColor (if line `mod` 10 == 0 then colorDelim else color) ++
        unwords (shortMods ++ lambda ++ clearColor)
    where putColor c = "\ESC[38;5;" ++ show c ++ "m\STX"
          clearColor = pure "\ESC[m\STX "
          lambda = pure "\xf0c92"
          shortMods = map shortenModName $ filter (/= "Prelude") mods
          shortenModName = fst .
              foldr (\x (xs, isQualifier) ->
                        case (x, isQualifier) of
                            ('.', _) -> (x : xs, True)
                            (_, True) | Data.Char.isAsciiLower x -> (xs, True)
                            _ -> (x : xs, isQualifier)
                    ) ("", False)
:}
:set prompt-function \mods line -> pure $ prompt_ mods line 208 214
:set prompt-cont-function \mods line -> pure $ prompt_ mods line 130 130

